React:

//DOM Element Creation using javascript.

/**
 * Create DOM Node on fly and insert into existing dom tree.
 */
window.onload = component;

function component() {
    console.log('DOM is ready!');
    //create element node
    var greeter = document.createElement('h1');
    console.dir(greeter);
    //create text node
    var message = document.createTextNode('Welcome to React!');
    
    //Link them
    greeter.appendChild(message);

    //insert into body flow,inside div
    var container = document.getElementById('root');
    container.appendChild(greeter);

}
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>/**
 * How to create DOM Element using React!
 *  Steps:
 *  >import react,react-dom  lib 
 *  >DOM element creation steps
 */
import React from 'react';
import { render } from 'react-dom';

//create dom element
 //create element node
/*  var greeter = document.createElement('h1');
 console.dir(greeter);
 //create text node
 var message = document.createTextNode('Welcome to React!');
 
 //Link them
 greeter.appendChild(message);

 //insert into body flow,inside div
 var container = document.getElementById('root');
 container.appendChild(greeter) */;

//const greeter = <h1>Welcome to React!</h1>;
const greeter = React.createElement('h1', null, 'Welcome to React!');
console.dir(greeter)

render(greeter, document.getElementById('root'));
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


"React.Component"

React.Component class:
.....................
>instance variables
 props,state

>instance methods
render()
componentWillMount()
componentDidMount()
componentWillReceiveProps()
shouldComponentUpdate()
componentWillUpdate()
componentDidUpdate()
componentWillUnmount()
setState()
forceUpdate()

>static variables,methods
defaultProps
propTypes
displayName
/**
 * Create Components:
 * 1.variable pattern
 * 2.function pattern
 * 3.ES 6 Class pattern
 * 
 * Note: all patterns are use full.
 */
import React from 'react';
import ReactDOM from 'react-dom';


/* //variable pattern
const welcome = <h1>Welcome</h1>;
const hai = <h1>Hai</h1>
//render(welcome,document.getElementById('root'))
render(welcome, root)//react will insert document.getElementById('root) after compilation
//render(hai, root); */

//Function:ES 5
/* function Welcome() {
    return (<h1>Welcome</h1>);
} */
//Function :ES6 Arrow function
//const Welcome = () => <h1>Welcome</h1>;

//Class
class Welcome extends React.Component{
 //override
    render() {
        return <h1>Welcome</h1>;
   }   
}
ReactDOM.render(<Welcome />, root);
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Multiple Elements:
..................
/**
 * Component composition:Component Composition.
 */
import React, { Component } from 'react';
import { render } from 'react-dom';

//Layout
const Header = () => (<div>
 <h1>Header</h1>
</div>);
const Footer = () => (<div>
    <h1>Footer</h1>
</div>);
const MainSection = () => (<div>
    <h1>MainSection</h1>
</div>);
class Container extends Component{
    render() {
        return (
            <div>
                <Header />
                <MainSection/> 
                <Footer/>   
            </div>    
        );
    }
}
render(<Container />, root);



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
HTML attributes List-JSX
accept acceptCharset accessKey action allowFullScreen allowTransparency alt
async autoComplete autoFocus autoPlay capture cellPadding cellSpacing challenge
charSet checked cite classID className colSpan cols content contentEditable
contextMenu controls controlsList coords crossOrigin data dateTime default defer
dir disabled download draggable encType form formAction formEncType formMethod
formNoValidate formTarget frameBorder headers height hidden high href hrefLang
htmlFor httpEquiv icon id inputMode integrity is keyParams keyType kind label
lang list loop low manifest marginHeight marginWidth max maxLength media
mediaGroup method min minLength multiple muted name noValidate nonce open
optimum pattern placeholder poster preload profile radioGroup readOnly rel
required reversed role rowSpan rows sandbox scope scoped scrolling seamless
selected shape size sizes span spellCheck src srcDoc srcLang srcSet start step
style summary tabIndex target title type useMap value width wmode wrap

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
CSS :  bootstrap
>npm install bootstrap --save

>import 'bootstrap/dist/css/bootstrap.css';



/**
 * Create more elements
 * Javascript and XML:
 *    In react we write declarative code by mixing javascript
 *  expressions and html markup
 *  >javascript expressions play role of data place holders
 *  >markup is represented as html tags.
 *   HTML tags are reprsented by using basic "XML Parsing" rules:
 *  >Every JSX dom tree must have one single parent.
 *  >Every Opened element must be closed.
 *    <Welcome></Welcome>
 *   <Welcome/> - Self Closing
 *  <hr/><br/><img/>
 * 
 * HTML Attributes:
 *  <h1 class="heading"></h1> - htmlSyntax
 *  <h1 className="heading"></h1> -JSX Syntax
 * 
 * Basic  HTML Attributes IN jsx:
 * 
 * 
 * ccept acceptCharset accessKey action allowFullScreen allowTransparency alt
async autoComplete autoFocus autoPlay capture cellPadding cellSpacing challenge
charSet checked cite classID className colSpan cols content contentEditable
contextMenu controls controlsList coords crossOrigin data dateTime default defer
dir disabled download draggable encType form formAction formEncType formMethod
formNoValidate formTarget frameBorder headers height hidden high href hrefLang
htmlFor httpEquiv icon id inputMode integrity is keyParams keyType kind label
lang list loop low manifest marginHeight marginWidth max maxLength media
mediaGroup method min minLength multiple muted name noValidate nonce open
optimum pattern placeholder poster preload profile radioGroup readOnly rel
required reversed role rowSpan rows sandbox scope scoped scrolling seamless
selected shape size sizes span spellCheck src srcDoc srcLang srcSet start step
style summary tabIndex target title type useMap value width wmode wrap
 * 
 */
import React from 'react';
import { render } from 'react-dom';
import { Container } from './Container';
import 'bootstrap/dist/css/bootstrap.css';

render(<Container/>, root);